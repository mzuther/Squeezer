{# ========================================================================== #}
{#                                                                            #}
{#  FrutJUCE                                                                  #}
{#  ========                                                                  #}
{#  Common classes for use with the JUCE library                              #}
{#                                                                            #}
{#  Copyright (c) 2010-2024 Martin Zuther (http://www.mzuther.de/)            #}
{#                                                                            #}
{#  This program is free software: you can redistribute it and/or modify      #}
{#  it under the terms of the GNU General Public License as published by      #}
{#  the Free Software Foundation, either version 3 of the License, or         #}
{#  (at your option) any later version.                                       #}
{#                                                                            #}
{#  This program is distributed in the hope that it will be useful,           #}
{#  but WITHOUT ANY WARRANTY; without even the implied warranty of            #}
{#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             #}
{#  GNU General Public License for more details.                              #}
{#                                                                            #}
{#  You should have received a copy of the GNU General Public License         #}
{#  along with this program.  If not, see <http://www.gnu.org/licenses/>.     #}
{#                                                                            #}
{#  Thank you for using free software!                                        #}
{#                                                                            #}
{# ========================================================================== #}

{%- import '00-stencils/common.jinja' as common -%}
{%- import '00-stencils/frut.jinja' as frut -%}
{%- import '00-stencils/project_settings.jinja' as settings -%}

{# ========================================================================== #}

{%- macro render_preamble(copyright, includes, within_frut) %}
#! /usr/bin/env bash

{% for line in copyright -%}
#  {{ line }}
{% endfor %}


###############################################################################
#
#  WARNING: this file was auto-generated, please do not edit!
#
###############################################################################

project_home=$(pwd)/..{% if within_frut %}/..{% endif %}



function lint_file
{
    filename="$1"
    dirname=$(dirname "$1")
    project_home="$2"

    printf "%s\n" "$filename"

    clang \
        -x c++ - \
{% for line in includes.files + includes.files_unittest %}
        -include "$project_home/{{ line }}" \
{% endfor %}
{% for line in includes.paths + includes.paths_unittest %}
        -I "$project_home/{{ line }}" \
{% endfor %}
        -I "$dirname" \
        -fsyntax-only \
        -fno-caret-diagnostics \
        -fcolor-diagnostics \
        -std=c++17 \
        -Wall \
        -Wno-pragma-once-outside-header \
        < "$filename"

    cppcheck \
        --template=gcc \
        --library="$project_home/Source/frut/cppcheck_googletest.cfg" \
        --enable=style \
{% for line in includes.files + includes.files_unittest %}
        --include="$project_home/{{ line }}" \
{% endfor %}
        --inline-suppr \
        --language=c++ \
        --force \
        --quiet \
        "$filename" 2>&1 | \
    sed -Ee 's/[^:]+://' | \
    GREP_COLORS="mt=01;31" grep --extended-regexp --colour=always \
                                --label "$filename" --with-filename \
               '[^0-9:].*'

    # find error-like codetags
    GREP_COLORS="mt=01;31" grep --extended-regexp --colour=always \
                                --with-filename --line-number \
               '\<(BUG|FIXME|XXX)\>' \
               "$filename"

    # find warning-like codetags
    GREP_COLORS="mt=01;33" grep --extended-regexp --colour=always \
                                --with-filename --line-number \
               '\<(HACK|TODO|@todo)\>' \
               "$filename"
}


export -f lint_file
printf "\n"

{% if within_frut %}
find . \( -iname "*.cpp" -or -iname "*.h" \) -print | \
{% else %}
find . -maxdepth 1 \( -iname "*.cpp" -or -iname "*.h" \) -print | \
    sort | \
    parallel --will-cite --group \
             lint_file {} "$project_home"

find ./frut/amalgamated -maxdepth 1 \( -iname "*.cpp" -or -iname "*.h" \) -print | \
{% endif %}
    sort | \
    parallel --will-cite --group \
             lint_file {} "$project_home"

printf "\n"
{% endmacro -%}

{# -------------------------------------------------------------------------- #}

{%- macro render_postamble() %}
{% endmacro -%}

{# ========================================================================== #}

{{- common.start_new_file('Source/lint.sh') -}}

{{- render_preamble(settings.copyright, settings.includes, false) }}

{{- render_postamble() -}}

{# -------------------------------------------------------------------------- #}

{{- common.start_new_file('Source/frut/lint.sh') -}}

{{- render_preamble(frut.copyright, frut.includes, true) }}

{{- render_postamble() -}}

{# ========================================================================== #}
